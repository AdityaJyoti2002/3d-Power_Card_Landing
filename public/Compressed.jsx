/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 powercard.compressed.gltf 
*/

import React from 'react'
import { useGLTF } from '@react-three/drei'

export function Model(props) {
  const { nodes, materials } = useGLTF('/powercard.compressed.gltf')
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Plane.geometry} material={materials['Clean silver(Shiny Metal)0']} />
      <mesh geometry={nodes.Plane_1.geometry} material={materials['Plain Grey Flat1']} />
      <mesh geometry={nodes.Plane001.geometry} material={materials['Plain Grey Flat1']} />
      <mesh geometry={nodes.Cube004.geometry} material={materials['Aluminium sand4']} />
      <mesh geometry={nodes.Plane002.geometry} material={materials['Soft Black Fabric5']} />
      <mesh geometry={nodes.Cylinder001.geometry} material={materials['Clean silver(Shiny Metal)0']} />
      <mesh geometry={nodes.Plane005.geometry} material={materials['Material.0066']} />
      <mesh geometry={nodes.Plane008.geometry} material={materials['Material.0057']} />
      <mesh geometry={nodes.BY_LAST_MINUTES.geometry} material={materials['BY LAST MINUTES8']} />
      <mesh geometry={nodes.Cube003.geometry} material={materials['PlÃ¡stico fosco 19']} />
      <mesh geometry={nodes.Cube003_1.geometry} material={materials['Metal ouro10']} />
      <mesh geometry={nodes.Cube.geometry} material={materials.Aluminum11} />
      <mesh geometry={nodes['5v_Bluetooth_Module'].geometry} material={materials['Black Coating12']} />
      <mesh geometry={nodes['5v_Bluetooth_Module_1'].geometry} material={materials.Metal13} />
      <mesh geometry={nodes['5v_Bluetooth_Module_2'].geometry} material={materials['PCB Top.00114']} />
      <mesh geometry={nodes['5v_Bluetooth_Module_3'].geometry} material={materials['Black Coating12']} />
      <mesh geometry={nodes['5v_Bluetooth_Module_4'].geometry} material={materials['PCB Side16']} />
      <mesh geometry={nodes['5v_Bluetooth_Module_5'].geometry} material={materials['Material.0057']} />
    </group>
  )
}

useGLTF.preload('/powercard.compressed.gltf')
